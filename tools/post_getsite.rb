#!/usr/bin/ruby

def show_error(msg = '')
  puts "ERROR: #{msg}"
  puts "use --help or -h for instructions"
  exit!
end

module SetupSite
  def SetupSite.create_hosts_entry(domain)
    hosts_file = '/etc/hosts'
    unless File.writable?(hosts_file)
      show_error("Unable to continue #{hosts_file} is unwritable")
    end
    
    `grep #{domain} #{hosts_file}`
    unless ($?.exitstatus == 0)
      puts "Added to hosts file"
      File.open(hosts_file, 'a') {|fp|
        fp.write("127.0.0.1\t#{domain}\n")
      }
    end
  end
  
  def SetupSite.create_symlink(domain, docroot, www_dir)
    www_dir = File.expand_path(www_dir);
    unless File.symlink?("#{www_dir}/#{domain}")
      puts "Created www symlink"
      `ln -s #{docroot} #{www_dir}/#{domain}`
    end
  end
  
  
  def SetupSite.creare_drush_alias(domain, docroot)
    drush_aliases = File.expand_path('~/.drush/aliases.drushrc.php');
    unless (SetupSite.has_drush_alias?(domain))
      alias_entry = <<-EOF
      #generated by post_getsite.rb
      $aliases['#{domain.gsub(/\./,'-')}'] = array(
        'uri' => '#{domain}',
        'root' => '#{docroot}',
      );
    
EOF
      File.open(drush_aliases, 'a') {|fp|
        fp.write(alias_entry)
      }
      puts "Created the drush alias"
    end
  end
  
  def SetupSite.has_drush_alias?(domain)
    drush_aliases = File.expand_path('~/.drush/aliases.drushrc.php');
    `grep #{domain} #{drush_aliases}`
    return ($?.exitstatus == 0)
  end
  
  def SetupSite.clear_cache
    `drush --uri=#{domain} cc all`
    puts "Cleared the cache"
  end
  
end


if $0 == __FILE__

  #!/usr/bin/env ruby
  # A script that will pretend to resize a number of images
  require 'optparse'
  
  options = {}
  
  optparse = OptionParser.new do|opts|
    # Set a banner, displayed at the top
    # of the help screen.
    opts.banner = "Usage: post_getsite.rb  [options] domain drupal_docroot ..."
  
    # Define the options, and what they do
    options[:create_host] = false
    opts.on( '-o', '--create-host', 'Create an entry to map the domain to 127.0.0.1 in /etc/hosts' ) do
      options[:create_host] = true
    end
    
    options[:create_symlink] = false
    opts.on( '-s', '--create-symlink', 'Create symlink from ~/www/domain -> docroot.  Use --www-dir to change the directory where the symlink is creted.') do
      options[:create_symlink] = true
    end
    
    options[:www_dir] = "~/www/"
    opts.on( '', '--www-dir DIRECTORY', 'A directory which contains all of your docroots.  Can be used in conjunction with --create-symlink.' ) do |dir|
      options[:www_dir] = dir
    end
  
    options[:create_drush_alias] = false
    opts.on( '-d', '--create-drush-alias', 'Create an alias in the drush aliases file.' ) do
      options[:create_drush_alias] = true;
    end
    
    # This displays the help screen, all programs are
    # assumed to have this option.
    opts.on( '-h', '--help', 'Display this screen' ) do
      puts opts
      exit!
    end
  end
  
  # Parse the command-line. Remember there are two forms
  # of the parse method. The 'parse' method simply parses
  # ARGV, while the 'parse!' method parses ARGV and removes
  # any options found there, as well as any parameters for
  # the options. What's left is the list of files to resize.
  optparse.parse!
  
  domain = ARGV[0]
  docroot = ARGV[1]
  unless domain && docroot
    show_error("domain and docroot are required arguments")
    exit!
  end
  
  if options[:create_host]
    SetupSite.create_hosts_entry(domain)
  end
  
  if options[:create_symlink]
    SetupSite::create_symlink(domain, docroot, options[:www_dir])
  end
  
  if options[:create_drush_alias]
    SetupSite::creare_drush_alias(domain, docroot)
  end
end

