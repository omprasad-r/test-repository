<?php

/**
 * Test audit trail administration form.
 */
class AuditTrailTest extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Form tracking',
      'description' => 'Test form tracking.',
      'group' => 'AuditTrail',
    );
  }

  function setUp(array $modules = array()) {
    $modules[] = 'audit_trail';
    $modules[] = 'audit_trail_test';
    parent::setUp($modules);
    $admin_user = $this->drupalCreateUser(array('administer audit trail'));
    $this->drupalLogin($admin_user);
  }

  /**
   * Returns POSTable data to change every field on the test audit trail form.
   */
  function getAuditTrailFormChangePost() {
    return array(
      'test_checkbox' => 1,
      'test_checkboxes[checkbox_one]' => FALSE,
      'test_checkboxes[checkbox_two]' => TRUE,
      'test_checkboxes[checkbox_three]' => TRUE,
      'test_date[year]' => 2000,
      'test_date[month]' => 1,
      'test_date[day]' => 1,
      'test_fieldset[test_child_textfield]' => 'changed test child textfield default value',
      'test_password' => 'test password',
      'test_password_confirm[pass1]' => 'test password confirm',
      'test_password_confirm[pass2]' => 'test password confirm',
      'test_radio' => 'radio_value',
      'test_radios' => 'radios_two',
      'test_select' => 'select_two',
      'test_multiselect[]' => array(
        'multiselect_two',
        'multiselect_three',
      ),
      'test_tableselect' => 'row1',
      'test_multiple_tableselect[row1]' => TRUE,
      'test_multiple_tableselect[row2]' => TRUE,
      'test_textarea' => 'changed test textarea default value',
      'test_textfield' => 'changed test textfield default value',
      'test_weight' => 1,
    );
  }

  /**
   * Returns POSTable data to submit the test audit trail form without changes.
   */
  function getAuditTrailFormUnchangedPost() {
    return array(
      'test_checkbox' => FALSE,
      'test_checkboxes[checkbox_one]' => TRUE,
      'test_checkboxes[checkbox_two]' => TRUE,
      'test_checkboxes[checkbox_three]' => FALSE,
      'test_fieldset[test_child_textfield]' => 'test child textfield default value',
      'test_password' => '',
      'test_password_confirm[pass1]' => '',
      'test_password_confirm[pass2]' => '',
      'test_radios' => 'radios_one',
      'test_select' => 'select_one',
      'test_multiselect[]' => array(
        'multiselect_one',
        'multiselect_two',
      ),
      'test_multiple_tableselect[row1]' => FALSE,
      'test_multiple_tableselect[row2]' => FALSE,
      'test_textarea' => 'test textarea default value',
      'test_textfield' => 'test textfield default value',
      'test_weight' => 0,
    );
  }

  /**
   * Returns the latest audit trail watchdog entry's log section.
   */
  function getAuditTrailLastLog() {
    $logs = db_query_range('SELECT variables FROM {watchdog} WHERE type = :type ORDER BY wid DESC', 0, 1, array(':type' => 'audit_trail'))->fetchField();
    if ($logs) {
      $logs = unserialize($logs);
      $logs = $logs['@logs'];
    }
    return $logs;
  }

  /**
   * Change test form and ensure all changes are logged properly.
   */
  function testAuditTrailFormChangeTracking() {
    // Configure audit trail to track form changes.
    $edit = array(
      'audit_trail_log_destination' => 'watchdog',
      'audit_trail_form_changes' => '/audit_trail_test_form/',
      'audit_trail_form_changes_path' => '',
      'audit_trail_form_submissions' => '',
      'audit_trail_form_submissions_path' => '',
      'audit_trail_separator' => '#',
    );
    $this->drupalPost('admin/config/development/audit-trail', $edit, t('Save configuration'));
    $this->assertText(t('The configuration options have been saved.'));

    // Change test form and submit.
    $edit = $this->getAuditTrailFormChangePost();
    $this->drupalPost('audit_trail_test_form', $edit, t('Submit'));
    $this->assertText(t('Audit trail form submitted'));

    // Validate logged form changes.
    $expected_diffs = array(
      '[test_checkbox]' => array(
        'old' => 0,
        'new' => 1,
      ),
      '[test_checkboxes]' => array(
        'old' => 'a:2:{s:12:"checkbox_one";i:1;s:14:"checkbox_three";i:0;}',
        'new' => 'a:2:{s:12:"checkbox_one";i:0;s:14:"checkbox_three";i:1;}',
      ),
      '[test_date]' => array(
        'old' => 'a:3:{s:5:"month";s:1:"2";s:3:"day";s:1:"2";s:4:"year";s:4:"2001";}',
        'new' => 'a:3:{s:5:"month";s:1:"1";s:3:"day";s:1:"1";s:4:"year";s:4:"2000";}',
      ),
      '[test_fieldset][test_child_textfield]' => array(
        'old' => 'test child textfield default value',
        'new' => 'changed test child textfield default value',
      ),
      '[test_password]' => array(
        'old' => t('Hidden'),
        'new' => t('Hidden'),
      ),
      '[test_password_confirm]' => array(
        'old' => t('Hidden'),
        'new' => t('Hidden'),
      ),
      '[test_radio]' => array(
        'old' => FALSE,
        'new' => 'radio_value',
      ),
      '[test_radios]' => array(
        'old' => 'radios_one',
        'new' => 'radios_two',
      ),
      '[test_select]' => array(
        'old' => 'select_one',
        'new' => 'select_two',
      ),
      '[test_multiselect]' => array(
        'old' => 'a:2:{s:15:"multiselect_one";i:1;s:17:"multiselect_three";i:0;}',
        'new' => 'a:2:{s:15:"multiselect_one";i:0;s:17:"multiselect_three";i:1;}',
      ),
      '[test_tableselect]' => array(
        'old' => 'a:0:{}',
        'new' => 'row1',
      ),
      '[test_multiple_tableselect]' => array(
        'old' => 'a:2:{s:4:"row1";i:0;s:4:"row2";i:0;}',
        'new' => 'a:2:{s:4:"row1";i:1;s:4:"row2";i:1;}',
      ),
      '[test_textarea]' => array(
        'old' => 'test textarea default value',
        'new' => 'changed test textarea default value',
      ),
      '[test_textfield]' => array(
        'old' => 'test textfield default value',
        'new' => 'changed test textfield default value',
      ),
      '[test_weight]' => array(
        'old' => 0,
        'new' => 1,
      ),
    );
    $expected_logs = implode("\n", audit_trail_change_log_prepare($expected_diffs));
    $actual_logs = $this->getAuditTrailLastLog();
    $this->assertTrue($expected_logs === $actual_logs, t('The logged form changes match the expected format.'));
  }

  /**
   * Submit test form and ensure nothing is logged.
   */
  function testAuditTrailIntactFormChangeTracking() {
    // Configure audit trail to track form changes.
    $edit = array(
      'audit_trail_log_destination' => 'watchdog',
      'audit_trail_form_changes' => '/audit_trail_test_form/',
      'audit_trail_form_changes_path' => '',
      'audit_trail_form_submissions' => '',
      'audit_trail_form_submissions_path' => '',
      'audit_trail_separator' => '#',
    );
    $this->drupalPost('admin/config/development/audit-trail', $edit, t('Save configuration'));
    $this->assertText(t('The configuration options have been saved.'));

    // Change test form and submit.
    $edit = $this->getAuditTrailFormUnchangedPost();
    $this->drupalPost('audit_trail_test_form', $edit, t('Submit'));
    $this->assertText(t('Audit trail form submitted'));

    $actual_logs = $this->getAuditTrailLastLog();
    $this->assertFalse($actual_logs, t('The unchanged form did not cause any logs to be written.'));
  }

  /**
   * Submit test form logging via path matching and ensure submission is logged.
   */
  function testAuditTrailFormSubmissionTracking() {
    // Configure audit trail to track form submission.
    $edit = array(
      'audit_trail_log_destination' => 'watchdog',
      'audit_trail_form_changes' => '',
      'audit_trail_form_changes_path' => '',
      'audit_trail_form_submissions' => '',
      'audit_trail_form_submissions_path' => '/audit_trail_test_form/',
      'audit_trail_separator' => '#',
    );
    $this->drupalPost('admin/config/development/audit-trail', $edit, t('Save configuration'));
    $this->assertText(t('The configuration options have been saved.'));

    // Change test form and submit.
    $edit = $this->getAuditTrailFormChangePost();
    $this->drupalPost('audit_trail_test_form', $edit, t('Submit'));
    $this->assertText(t('Audit trail form submitted'));

    // Validate logged form changes.
    $expected_values = array(
      'test_checkbox' => 1,
      'test_checkboxes' => array(
        'checkbox_two' => 'checkbox_two',
        'checkbox_three' => 'checkbox_three',
        'checkbox_one' => 0,
      ),
      'test_date' => array(
        'month' => '1',
        'day' => '1',
        'year' => '2000',
      ),
      'test_fieldset' => array(
        'test_child_textfield' => 'changed test child textfield default value',
      ),
      'test_password' => t('Hidden'),
      'test_password_confirm' => array(
        'pass1' => t('Hidden'),
        'pass2' => t('Hidden'),
      ),
      'test_radio' => 'radio_value',
      'test_radios' => 'radios_two',
      'test_select' => 'select_two',
      'test_multiselect' => array(
        'multiselect_two' => 'multiselect_two',
        'multiselect_three' => 'multiselect_three',
      ),
      'test_tableselect' => 'row1',
      'test_multiple_tableselect' => array(
        'row1' => 'row1',
        'row2' => 'row2',
      ),
      'test_textarea' => 'changed test textarea default value',
      'test_textfield' => 'changed test textfield default value',
      'test_weight' => '1',
      'submit' => t('Submit'),
    );
    $expected_logs = serialize($expected_values);
    $actual_logs = $this->getAuditTrailLastLog();
    $this->assertTrue($expected_logs === $actual_logs, t('The logged form submission matches the expected format.'));
  }

}
