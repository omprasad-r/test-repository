<?php

/**
 * Implementation of hook_init().
 */
function themebuilder_test_init() {
  if (themebuilder_compiler_in_edit_mode()) {
    $path = drupal_get_path('module', 'themebuilder_test');
    drupal_add_js("$path/js/SelectorTest.js", 'file');
    drupal_add_js(
      array(
        'themebuilderTestReportPath' => 'themebuilder-test-report',
      ),
      array ('type' => 'setting')
    );
    drupal_add_css("$path/themebuilder_test.css", 'file');
  }
}

/**
 * Implementation of hook_menu().
 */
function themebuilder_test_menu() {
  $items = array();

  // Commits a modification to the server.
  $items['themebuilder-test-report'] = array(
    'title' => t('Inserts report results into the database.'),
    'page callback' => 'themebuilder_test_report',
    'type' => MENU_CALLBACK,
  );
  foreach ($items as $path => &$item) {
    $item['access callback'] = 'themebuilder_compiler_access';
    $item['access arguments'] = array($path);
  }
  return $items;
}

/**
 * Inserts report results into the database.
 */
function themebuilder_test_report() {
  $theme = themebuilder_compiler_get_current_theme();
  $base_theme = $theme->getBaseThemeName();
  $version = $theme->getVersion();
  $ret = array();
  $ret['error'] = '';
  if (isset($_POST['issues'])) {
    $issues = $_POST['issues'];
    themebuilder_test_write_report_to_database($base_theme, $version, $issues);
  }
  else {
    $ret['error'] = 'Wrong Arguments';
  }
  themebuilder_compiler_json_output($ret);
}

/**
 * Adds reported issues to the database.
 *
 * @param {String} $base_theme
 *   The name of the base theme used to generate the results.
 * @param {String} $version
 *   The version string representing the version of the base theme used to
 *   generate results.
 * @param {array} $issues
 *   The test failures.
 */
function themebuilder_test_write_report_to_database($base_theme, $version, $issues) {
  foreach ($issues as $index => $issue) {
    db_insert('themebuilder_selector_report')
      ->fields(array(
        'base_theme' => $base_theme,
        'version' => $version,
        'selector' => $issue['selector'],
        'property' => $issue['property'],
        'expected' => $issue['expected'],
        'actual' => $issue['actual'],
        ))
      ->execute();
  }
}
